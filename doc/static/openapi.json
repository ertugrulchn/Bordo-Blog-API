{
  "openapi": "3.0.1",
  "info": {
    "version": "v1",
    "title": "Bordo-Blog API",
    "description": "Blog Management API",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User endpoints"
    }
  ],
  "paths": {
    "/user/login": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login",
        "description": "Login Account",
        "operationId": "users.login",
        "requestBody": {
          "$ref": "#/components/requestBodies/login"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/login"
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1user~1login/post/responses/400/content/application~1json/schema"
                }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register",
        "description": "Register",
        "operationId": "users.register",
        "requestBody": {
          "$ref": "#/components/requestBodies/register"
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/register"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1user~1login/post/responses/400"
          },
          "409": {
            "description": "Conflict error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1user~1login/post/responses/400/content/application~1json/schema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1user~1login/post/responses/400/content/application~1json/schema"
                }
              }
            }
          }
        }
      }
    },
    "/user/get-password-reset-email": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset password",
        "description": "With the token received from this endpoint, a request can be made to the `user/password-reset` endpoint.",
        "operationId": "users.get-password-reset-email",
        "requestBody": {
          "$ref": "#/components/requestBodies/get-password-reset-email"
        },
        "responses": {
          "200": {
            "description": "When this response is received, a password reset link is sent to the user's e-mail address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login/allOf/0"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1user~1login/post/responses/400"
          },
          "404": {
            "$ref": "#/paths/~1user~1login/post/responses/404"
          }
        }
      }
    },
    "/user/reset-password": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset Password",
        "description": "The token in the request body is the token obtained from the `user/get-password-reset-email` endpoint.",
        "operationId": "users.reset-password",
        "requestBody": {
          "$ref": "#/components/requestBodies/reset-password"
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login/allOf/0"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1user~1login/post/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1user~1register/post/responses/500"
          }
        }
      }
    },
    "/user/get-email-verification-email": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Verify email address",
        "description": "With the token received from this endpoint, a request can be made to the `user/verify-email` endpoint.",
        "operationId": "users.get-email-verification-email",
        "requestBody": {
          "$ref": "#/components/requestBodies/get-email-verification-email"
        },
        "responses": {
          "200": {
            "description": "When this response is received, an email verification link will be sent to the user's email address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login/allOf/0"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1user~1login/post/responses/400"
          },
          "404": {
            "$ref": "#/paths/~1user~1login/post/responses/404"
          }
        }
      }
    },
    "/user/verify-email": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Verify email",
        "description": "Verify email",
        "operationId": "users.verify.email",
        "requestBody": {
          "$ref": "#/components/requestBodies/verify-email"
        },
        "responses": {
          "200": {
            "description": "Email verification successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login/allOf/0"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1user~1login/post/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1user~1register/post/responses/500"
          }
        }
      }
    },
    "/user/change-password": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change Password",
        "description": "Change Password",
        "operationId": "users.change-password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/change-password"
        },
        "responses": {
          "200": {
            "description": "Password change successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/login/allOf/0"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1user~1login/post/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1user~1register/post/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "login": {
        "description": "Password must contain at least 1 lowercase letter, 1 uppercase letter and 1 special character and must be at least 8 characters",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "$ref": "#/components/requestBodies/register/content/application~1json/schema/allOf/1/allOf/0"
                },
                {
                  "required": [
                    "email",
                    "password"
                  ]
                }
              ]
            }
          }
        }
      },
      "register": {
        "description": "Password must contain at least 1 lowercase letter, 1 uppercase letter and 1 special character and must be at least 8 characters",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "first_name": {
                          "title": "User first name",
                          "description": "User first name",
                          "type": "string",
                          "minLength": 3
                        },
                        "last_name": {
                          "title": "User last name",
                          "description": "User last name",
                          "type": "string",
                          "minLength": 3
                        }
                      }
                    },
                    {
                      "required": [
                        "first_name",
                        "last_name"
                      ]
                    }
                  ]
                },
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "email": {
                          "title": "User email",
                          "description": "User email",
                          "type": "string",
                          "format": "email"
                        },
                        "password": {
                          "title": "User password",
                          "description": "User password",
                          "type": "string",
                          "minLength": 8,
                          "example": "Bordo01!"
                        }
                      }
                    },
                    {
                      "required": [
                        "email",
                        "password"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "get-password-reset-email": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/email"
                },
                {
                  "required": [
                    "email"
                  ]
                }
              ]
            }
          }
        }
      },
      "get-email-verification-email": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/email"
                },
                {
                  "required": [
                    "email"
                  ]
                }
              ]
            }
          }
        }
      },
      "reset-password": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/reset-password"
            }
          }
        }
      },
      "verify-email": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/verify-email"
            }
          }
        }
      },
      "change-password": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "$ref": "#/components/schemas/change-password"
            }
          }
        }
      }
    },
    "schemas": {
      "login": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "message": {
                "title": "Response message",
                "description": "Response message",
                "type": "string"
              },
              "success": {
                "title": "Response success status",
                "description": "Response success status",
                "type": "boolean",
                "default": true
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "allOf": [
                  {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "title": "Document MongoDb Id",
                            "description": "MongoDb Id of the document",
                            "type": "string",
                            "example": "62ed69679c045c97a63390a4"
                          },
                          "createdAt": {
                            "title": "Document Creation Date",
                            "description": "The `createdAt` value is determined automatically by the API.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "title": "Document Update Date",
                            "description": "The `updatedAt` value is determined automatically by the API.",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      {
                        "$ref": "#/components/requestBodies/register/content/application~1json/schema/allOf/0/allOf/0"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "email": {
                            "title": "User email address",
                            "description": "User email address",
                            "type": "string",
                            "format": "email"
                          },
                          "email_verified": {
                            "title": "User's email is verified?",
                            "description": "User's email is verified?",
                            "type": "boolean",
                            "default": "true"
                          },
                          "email_notification": {
                            "title": "User is subscribed the email notification?",
                            "description": "User's email is verified?",
                            "type": "boolean",
                            "default": "true"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "roles": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/register/allOf/1/properties/data/allOf/1/properties/roles/items"
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "packages": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/register/allOf/1/properties/data/allOf/2/properties/packages/items"
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "tokens": {
                        "type": "object",
                        "properties": {
                          "access": {
                            "title": "JWT access token",
                            "description": "JWT access token",
                            "type": "string",
                            "example": "eyJhbG7Il9pZCI6IjYyZW..."
                          },
                          "refresh": {
                            "title": "JWT refresh token",
                            "description": "JWT refresh token",
                            "type": "string",
                            "example": "eyJhbG7Il9pZCI6IjYyZW..."
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "register": {
        "allOf": [
          {
            "$ref": "#/components/schemas/login/allOf/0"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/login/allOf/1/properties/data/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "title": "Role MongoDb Id",
                              "description": "Role MongoDb Id",
                              "type": "string",
                              "example": "62ed69679c045c97a63390a4"
                            },
                            "name": {
                              "title": "Role name",
                              "description": "Role name",
                              "type": "string",
                              "example": "Writer"
                            }
                          }
                        },
                        "example": []
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "packages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "title": "Package MongoDb Id",
                              "description": "Package MongoDb Id",
                              "type": "string",
                              "example": "62ed69679c045c97a63390a4"
                            },
                            "name": {
                              "title": "Package name",
                              "description": "Package name",
                              "type": "string",
                              "example": "Basic Package"
                            }
                          }
                        },
                        "example": []
                      }
                    }
                  },
                  {
                    "$ref": "#/components/schemas/login/allOf/1/properties/data/allOf/3"
                  }
                ]
              }
            }
          }
        ]
      },
      "reset-password": {
        "type": "object",
        "properties": {
          "token": {
            "title": "JWT Password reset token",
            "description": "Password reset token from endpoint `user/get-password-reset-email`.",
            "type": "string",
            "example": "eyJhbG7Il9pZCI6IjYyZW..."
          },
          "new_password": {
            "title": "New Password",
            "description": "New Password",
            "type": "string",
            "example": "Bordo02!"
          }
        },
        "required": [
          "token",
          "new_password"
        ]
      },
      "verify-email": {
        "type": "object",
        "properties": {
          "token": {
            "title": "JWT Email verification token",
            "description": "Email verification token from endpoint `user/get-email-verification-email`.",
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "change-password": {
        "type": "object",
        "properties": {
          "old_password": {
            "title": "User old password",
            "description": "User old password",
            "type": "string",
            "example": "Bordo01!"
          },
          "new_password": {
            "title": "User new password",
            "description": "User new password",
            "type": "string",
            "example": "Bordo02!"
          }
        },
        "required": [
          "old_password",
          "new_password"
        ]
      },
      "email": {
        "type": "object",
        "properties": {
          "email": {
            "title": "User email address",
            "description": "User email address",
            "type": "string",
            "format": "email"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
