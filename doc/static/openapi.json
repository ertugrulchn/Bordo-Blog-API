{
  "openapi": "3.0.1",
  "info": {
    "version": "v1",
    "title": "Bordo-Blog API",
    "description": "Blog Management API",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://bordo-blog.herokuapp.com/api/v1",
      "description": "Web server"
    },
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User endpoints"
    },
    {
      "name": "Tags",
      "description": "Tag endpoints"
    },
    {
      "name": "Posts",
      "description": "Post endpoints"
    },
    {
      "name": "Addresses",
      "description": "Address endpoints"
    },
    {
      "name": "Roles (Only Admins)",
      "description": "User roles endpoints"
    }
  ],
  "paths": {
    "/users/verify-email/{emailVerifyToken}": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Verify email",
        "description": "Verify email",
        "operationId": "users.verify.email",
        "parameters": [
          {
            "in": "path",
            "name": "emailVerifyToken",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "emailVerifyToken in email verification mail"
          }
        ],
        "responses": {
          "200": {
            "description": "Email verification successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/users/profile": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "User's profile",
        "description": "User's profile",
        "operationId": "users.profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "allOf": [
                                {
                                  "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                                },
                                {
                                  "$ref": "#/components/requestBodies/register/content/application~1json/schema/allOf/0/allOf/0"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "email": {
                                      "title": "User email address",
                                      "description": "User email address",
                                      "type": "string",
                                      "format": "email"
                                    },
                                    "email_verified": {
                                      "title": "User's email is verified?",
                                      "description": "User's email is verified?",
                                      "type": "boolean",
                                      "default": "true"
                                    },
                                    "email_notification": {
                                      "title": "User is subscribed the email notification?",
                                      "description": "User's email is verified?",
                                      "type": "boolean",
                                      "default": "true"
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "$ref": "#/components/requestBodies/register/content/application~1json/schema/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "roles": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "_id": {
                                        "title": "Role MongoDb Id",
                                        "description": "Role MongoDb Id",
                                        "type": "string",
                                        "example": "62ed69679c045c97a63390a4"
                                      },
                                      "name": {
                                        "title": "Role name",
                                        "description": "Role name",
                                        "type": "string",
                                        "example": "Writer"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "packages": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "_id": {
                                        "title": "Package MongoDb Id",
                                        "description": "Package MongoDb Id",
                                        "type": "string",
                                        "example": "62ed69679c045c97a63390a4"
                                      },
                                      "name": {
                                        "title": "Package name",
                                        "description": "Package name",
                                        "type": "string",
                                        "example": "Basic Package"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/users/login": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login",
        "description": "Login Account",
        "operationId": "users.login",
        "requestBody": {
          "$ref": "#/components/requestBodies/login"
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "access_token": {
                              "title": "JWT access token",
                              "description": "JWT access token",
                              "type": "string",
                              "example": "eyJhbG7Il9pZCI6IjYyZW..."
                            },
                            "refresh_token": {
                              "title": "JWT refresh token",
                              "description": "JWT refresh token",
                              "type": "string",
                              "example": "eyJhbG7Il9pZCI6IjYyZW..."
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "properties": {
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users~1login/post/responses/400/content/application~1json/schema"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users~1login/post/responses/400/content/application~1json/schema"
                }
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register",
        "description": "Register",
        "operationId": "users.register",
        "requestBody": {
          "$ref": "#/components/requestBodies/register"
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1users~1login/post/responses/200/content/application~1json/schema/allOf/1/properties/data"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "409": {
            "description": "Conflict error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users~1login/post/responses/400/content/application~1json/schema"
                }
              }
            }
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/users/logout": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Log out",
        "description": "Log out account",
        "operationId": "users.logout",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Log out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Response message",
                      "description": "Response message",
                      "type": "string"
                    },
                    "success": {
                      "title": "Response success status",
                      "description": "Response success status",
                      "type": "boolean",
                      "default": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users~1login/post/responses/400/content/application~1json/schema"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users~1login/post/responses/400/content/application~1json/schema"
                }
              }
            }
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/users/get-password-reset-email": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset password",
        "description": "With the token received from this endpoint, a request can be made to the `user/password-reset` endpoint.",
        "operationId": "users.get-password-reset-email",
        "requestBody": {
          "$ref": "#/components/requestBodies/get-password-reset-email"
        },
        "responses": {
          "200": {
            "description": "When this response is received, a password reset link is sent to the user's e-mail address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/users/reset-password": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset Password",
        "description": "The token in the request body is the token obtained from the `user/get-password-reset-email` endpoint.",
        "operationId": "users.reset-password",
        "requestBody": {
          "$ref": "#/components/requestBodies/reset-password"
        },
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/users/get-email-verification-email": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Verify email address",
        "description": "With the token received from this endpoint, a request can be made to the `user/verify-email` endpoint.",
        "operationId": "users.get-email-verification-email",
        "requestBody": {
          "$ref": "#/components/requestBodies/get-email-verification-email"
        },
        "responses": {
          "200": {
            "description": "When this response is received, an email verification link will be sent to the user's email address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/users/change-password": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change Password",
        "description": "Change Password",
        "operationId": "users.change-password",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/change-password"
        },
        "responses": {
          "200": {
            "description": "Password change successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/tags/get-all": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get all tag",
        "description": "Get all tag",
        "operationId": "tags.get-all-tag",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1admin~1tags~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/tags/get/{tagId}": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Tags"
        ],
        "summary": "Get tag by id",
        "description": "Get tag by id",
        "operationId": "tags.get-tag-by-id",
        "parameters": [
          {
            "in": "path",
            "name": "tagId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Tag id",
            "length": 24
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1admin~1tags~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/admin/tags/create": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Tags"
        ],
        "summary": "Create tag",
        "description": "Create tag",
        "operationId": "tags.create-tag",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-tag"
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Tag name",
                                  "description": "Tag name",
                                  "type": "string",
                                  "minLength": 3
                                },
                                "post_count": {
                                  "title": "Post Count",
                                  "description": "Post Countr",
                                  "type": "number",
                                  "minLength": 3
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "409": {
            "$ref": "#/paths/~1users~1register/post/responses/409"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/admin/tags/update/{tagId}": {
      "summary": "",
      "description": "",
      "patch": {
        "tags": [
          "Tags"
        ],
        "summary": "Update tag",
        "description": "Update tag",
        "operationId": "tags.update-tag",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/update-tag"
        },
        "parameters": [
          {
            "$ref": "#/paths/~1tags~1get~1%7BtagId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1admin~1tags~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "409": {
            "$ref": "#/paths/~1users~1register/post/responses/409"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/admin/tags/delete/{tagId}": {
      "summary": "",
      "description": "",
      "delete": {
        "tags": [
          "Tags"
        ],
        "summary": "Delete tag",
        "description": "Delete tag",
        "operationId": "tags.delete-tag",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1tags~1get~1%7BtagId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1admin~1tags~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/posts/get-all/my": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get All My Posts",
        "description": "Get All My Posts",
        "operationId": "post.get-all-my-posts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                              },
                              {
                                "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "title": "Post content",
                                    "description": "Post content",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/6"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          }
        }
      }
    },
    "/posts/get/my/{postId}": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get All My Posts By Id",
        "description": "Get All My Posts By Id",
        "operationId": "post.get-all-my-post-by-id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Post id",
            "length": 24
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                              },
                              {
                                "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "title": "Post content",
                                    "description": "Post content",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/6"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/posts/get-all/previews": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get All Post Previews",
        "description": "Get All Post Previews",
        "operationId": "post.get-all-previews",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                              },
                              {
                                "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/posts/get/preview/{postId}": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get Post Preview By Id",
        "description": "Get Post Preview By Id",
        "operationId": "post.get-post-preview-by-id",
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                              },
                              {
                                "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/posts/create": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create A New Post",
        "description": "Create A New Post",
        "operationId": "post.create-post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/create-post"
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "title": "MongoDb Id of the document",
                                  "description": "MongoDb Id of the document",
                                  "type": "string",
                                  "example": "62ed69679c045c97a63390a4"
                                },
                                "createdAt": {
                                  "title": "Document Creation Date",
                                  "description": "The `createdAt` value is determined automatically by the API.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updatedAt": {
                                  "title": "Document Update Date",
                                  "description": "The `updatedAt` value is determined automatically by the API.",
                                  "type": "string",
                                  "format": "date-time"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "writer": {
                                  "type": "object",
                                  "properties": {
                                    "_id": {
                                      "title": "Writer id",
                                      "description": "Writer id",
                                      "type": "string"
                                    },
                                    "first_name": {
                                      "title": "Writer first name",
                                      "description": "Writer first name",
                                      "type": "string"
                                    },
                                    "last_name": {
                                      "title": "Writer last name",
                                      "description": "Writer last name",
                                      "type": "string"
                                    },
                                    "email": {
                                      "title": "Writer email address",
                                      "description": "Writer email address",
                                      "type": "string",
                                      "format": "email"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "title": "Post content",
                                  "description": "Post content",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "viewers": {
                                  "type": "array",
                                  "example": []
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "likes": {
                                  "type": "array",
                                  "example": []
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "comments": {
                                  "type": "array",
                                  "example": []
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "tags": {
                                  "type": "array",
                                  "items": {
                                    "allOf": [
                                      {
                                        "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "title": "Tag name",
                                            "description": "Tag name",
                                            "type": "string",
                                            "example": "Tag"
                                          },
                                          "post_count": {
                                            "title": "Tag post count",
                                            "description": "Tag post count",
                                            "type": "number",
                                            "example": 0
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/posts/add-view/{postId}": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Add View To Post",
        "description": "Add View To Post",
        "operationId": "post.add-view",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                            },
                            {
                              "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "title": "Post content",
                                  "description": "Post content",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/6"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "409": {
            "$ref": "#/paths/~1users~1register/post/responses/409"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/posts/change-like-status/{postId}": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Add Like To Post",
        "description": "Add Like To Post",
        "operationId": "post.change-like-status",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                            },
                            {
                              "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "title": "Post content",
                                  "description": "Post content",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/6"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/posts/add-comment/{postId}": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Add Comment To Post",
        "description": "Add Comment To Post",
        "operationId": "post.add-comment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "title": "Post Comment",
                        "description": "Post Comment",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "required": [
                      "comment"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                            },
                            {
                              "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "title": "Post content",
                                  "description": "Post content",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/6"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/posts/add-tag/{postId}": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Add Tag To Post",
        "description": "Add Tag To Post",
        "operationId": "post.add-tag",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "tag_id": {
                        "title": "Post Tag",
                        "description": "Post Tag",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "required": [
                      "tag_id"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                            },
                            {
                              "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "title": "Post content",
                                  "description": "Post content",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "viewers": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "_id": {
                                        "title": "Viewer MongoDb Id",
                                        "description": "Viewer MongoDb Id",
                                        "type": "string",
                                        "example": "62ed69679c045c97a63390a4"
                                      },
                                      "first_name": {
                                        "title": "Viewer first name",
                                        "description": "Viewer first name",
                                        "type": "string",
                                        "example": "Viewer"
                                      },
                                      "last_name": {
                                        "title": "Viewer last name",
                                        "description": "Viewer last name",
                                        "type": "string",
                                        "example": "Viewer"
                                      },
                                      "email": {
                                        "title": "Viewer email name",
                                        "description": "Viewer email name",
                                        "type": "string",
                                        "example": "email@email.com",
                                        "format": "email"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "likes": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "_id": {
                                        "title": "Viewer MongoDb Id",
                                        "description": "Viewer MongoDb Id",
                                        "type": "string",
                                        "example": "62ed69679c045c97a63390a4"
                                      },
                                      "first_name": {
                                        "title": "Viewer first name",
                                        "description": "Viewer first name",
                                        "type": "string",
                                        "example": "Viewer"
                                      },
                                      "last_name": {
                                        "title": "Viewer last name",
                                        "description": "Viewer last name",
                                        "type": "string",
                                        "example": "Viewer"
                                      },
                                      "email": {
                                        "title": "Viewer email name",
                                        "description": "Viewer email name",
                                        "type": "string",
                                        "example": "email@email.com",
                                        "format": "email"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "comments": {
                                  "type": "array",
                                  "items": {
                                    "allOf": [
                                      {
                                        "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "user_id": {
                                            "type": "object",
                                            "properties": {
                                              "_id": {
                                                "title": "User id",
                                                "description": "User id",
                                                "type": "string"
                                              },
                                              "first_name": {
                                                "title": "User first name",
                                                "description": "User first name",
                                                "type": "string"
                                              },
                                              "last_name": {
                                                "title": "User last name",
                                                "description": "User last name",
                                                "type": "string"
                                              },
                                              "email": {
                                                "title": "User email address",
                                                "description": "User email address",
                                                "type": "string",
                                                "format": "email"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "comment": {
                                            "title": "Viewer first name",
                                            "description": "Viewer first name",
                                            "type": "string",
                                            "example": "Viewer"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "409": {
            "$ref": "#/paths/~1users~1register/post/responses/409"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/posts/update/my/{postId}": {
      "summary": "",
      "description": "",
      "patch": {
        "tags": [
          "Posts"
        ],
        "summary": "Update My Post",
        "description": "Update My Post",
        "operationId": "post.update-post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "allOf": [
                      {
                        "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "content": {
                            "title": "Post content",
                            "description": "Post content",
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                            },
                            {
                              "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "title": "Post content",
                                  "description": "Post content",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/6"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/posts/delete/my/{postId}": {
      "summary": "",
      "description": "",
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete My Post",
        "description": "Delete My Post",
        "operationId": "post.delete-post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/posts/delete-comment/{postId}": {
      "summary": "",
      "description": "",
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete Comment To Post",
        "description": "Delete Comment To Post",
        "operationId": "post.delete-comment",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "comment_id": {
                        "title": "Post Comment Id",
                        "description": "Post Comment Id",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "required": [
                      "comment_id"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                            },
                            {
                              "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "title": "Post content",
                                  "description": "Post content",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/6"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/posts/delete-tag/{postId}": {
      "summary": "",
      "description": "",
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete Tag To Post",
        "description": "Delete Tag To Post",
        "operationId": "post.delete-tag",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "tag_id": {
                        "title": "Post Tag Id",
                        "description": "Post Tag Id",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "required": [
                      "tag_id"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                            },
                            {
                              "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "content": {
                                  "title": "Post content",
                                  "description": "Post content",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                            },
                            {
                              "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/6"
                            },
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/admin/posts/get-all": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get All Posts",
        "description": "Get All Posts",
        "operationId": "post.get-all-posts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                              },
                              {
                                "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "title": "Post content",
                                    "description": "Post content",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/6"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          }
        }
      }
    },
    "/admin/posts/get/{postId}": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get Post By Id",
        "description": "Get Post By Id",
        "operationId": "post.get-post-by-id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                              },
                              {
                                "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "title": "Post content",
                                    "description": "Post content",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/admin/posts/delete/{postId}": {
      "summary": "",
      "description": "",
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete Users Post",
        "description": "Delete Users Post",
        "operationId": "post.delete-post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1posts~1get~1my~1%7BpostId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "items": {
                            "allOf": [
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/1"
                              },
                              {
                                "$ref": "#/components/requestBodies/create-post/content/application~1json/schema/allOf/0/allOf/0"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "content": {
                                    "title": "Post content",
                                    "description": "Post content",
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/4"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/5"
                              },
                              {
                                "$ref": "#/paths/~1posts~1add-tag~1%7BpostId%7D/post/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/6"
                              },
                              {
                                "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/7"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/addresses/get-all/country": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get all countries",
        "description": "Get all countries",
        "operationId": "address.get-all-country",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "title": "MongoDb Id of the country",
                                "description": "MongoDb Id of the country",
                                "type": "string",
                                "length": 24,
                                "example": "62ed69679c045c97a63390a4"
                              },
                              "name": {
                                "title": "Country name",
                                "description": "Country name",
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 80,
                                "example": "Türkiye"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          }
        }
      }
    },
    "/addresses/get-all/city/{countryId}": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get all cities by country id",
        "description": "Get all cities by country id",
        "operationId": "address.get-all-city",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "countryId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Country id",
            "length": 24
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "country": {
                                  "$ref": "#/paths/~1addresses~1get-all~1country/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "cities": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/paths/~1addresses~1get-all~1district~1%7BcityId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/0/properties/city"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/addresses/get-all/district/{cityId}": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get all districts by city id",
        "description": "Get all districts by city id",
        "operationId": "address.get-all-district",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "cityId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "City id",
            "length": 24
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "city": {
                                  "type": "object",
                                  "properties": {
                                    "_id": {
                                      "title": "MongoDb Id of the city",
                                      "description": "MongoDb Id of the city",
                                      "type": "string",
                                      "length": 24,
                                      "example": "62f8d2ed7eb0550b2715cf1f"
                                    },
                                    "country": {
                                      "title": "MongoDb Id of the country",
                                      "description": "MongoDb Id of the country",
                                      "type": "string",
                                      "length": 24,
                                      "example": "62ed69679c045c97a63390a4"
                                    },
                                    "zip_code": {
                                      "title": "City zip code",
                                      "description": "City zip code",
                                      "type": "string",
                                      "length": 5,
                                      "example": "34000"
                                    },
                                    "name": {
                                      "title": "City name",
                                      "description": "City name",
                                      "type": "string",
                                      "minLength": 3,
                                      "maxLength": 30,
                                      "example": "İstanbul"
                                    },
                                    "region": {
                                      "title": "City region",
                                      "description": "City region",
                                      "type": "string",
                                      "minLength": 3,
                                      "maxLength": 60,
                                      "example": "Marmara"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "districts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "_id": {
                                        "title": "MongoDb Id of the district",
                                        "description": "MongoDb Id of the district",
                                        "type": "string",
                                        "length": 24,
                                        "example": "62f8d2ee7eb0550b2715cf2b"
                                      },
                                      "city": {
                                        "title": "MongoDb Id of the city",
                                        "description": "MongoDb Id of the city",
                                        "type": "string",
                                        "length": 24,
                                        "example": "62f8d2ed7eb0550b2715cf1f"
                                      },
                                      "zip_code": {
                                        "title": "District zip code",
                                        "description": "District zip code",
                                        "type": "string",
                                        "length": 5,
                                        "example": "34500"
                                      },
                                      "name": {
                                        "title": "District name",
                                        "description": "District name",
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 80,
                                        "example": "Esenyurt"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/addresses/get-all/my": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get all addresses of the user",
        "description": "Get all addresses of the user",
        "operationId": "address.get-all-my",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1addresses~1get~1my~1%7BaddressId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/data"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          }
        }
      }
    },
    "/addresses/get/my/{addressId}": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get user's address by address id",
        "description": "Get user's address by address id",
        "operationId": "address.get-my",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "addressId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Address id",
            "length": 24
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "title": "MongoDb Id of the address",
                                  "description": "MongoDb Id of the address",
                                  "type": "string",
                                  "length": 24,
                                  "example": "62f8d2787eb0550b2715c847"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "country": {
                                  "$ref": "#/paths/~1addresses~1get-all~1country/get/responses/200/content/application~1json/schema/allOf/1/properties/data/items"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "city": {
                                  "$ref": "#/paths/~1addresses~1get-all~1district~1%7BcityId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/0/properties/city"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "district": {
                                  "$ref": "#/paths/~1addresses~1get-all~1district~1%7BcityId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/data/allOf/1/properties/districts/items"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "_id": {
                                          "title": "MongoDb Id of the user",
                                          "description": "MongoDb Id of the user",
                                          "type": "string",
                                          "length": 24,
                                          "example": "62f8d2b77eb0550b2715cbe6"
                                        }
                                      }
                                    },
                                    {
                                      "$ref": "#/components/requestBodies/register/content/application~1json/schema/allOf/0/allOf/0"
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "email": {
                                          "title": "User email",
                                          "description": "User email",
                                          "type": "string",
                                          "format": "email"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "address_1": {
                                  "title": "Address line 1",
                                  "description": "Address line 1",
                                  "type": "string",
                                  "minLength": 10,
                                  "maxLength": 200
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "address_2": {
                                  "title": "Address line 2",
                                  "description": "Address line 2",
                                  "type": "string",
                                  "minLength": 10,
                                  "maxLength": 200,
                                  "required": false
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/addresses/create": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Create address",
        "description": "Create address",
        "operationId": "address.create",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "country": {
                            "title": "MongoDb Id of the country",
                            "description": "MongoDb Id of the country",
                            "type": "string",
                            "length": 24,
                            "example": "62f8d2787eb0550b2715c84a"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "city": {
                            "title": "MongoDb Id of the city",
                            "description": "MongoDb Id of the city",
                            "type": "string",
                            "length": 24,
                            "example": "62f8d2787eb0550b2715c84e"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "district": {
                            "title": "MongoDb Id of the district",
                            "description": "MongoDb Id of the district",
                            "type": "string",
                            "length": 24,
                            "example": "62f8d2797eb0550b2715c852"
                          }
                        }
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "address_1": {
                        "title": "Address line 1",
                        "description": "Address line 1",
                        "type": "string",
                        "minLength": 10,
                        "maxLength": 200
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "address_2": {
                        "title": "Address line 2",
                        "description": "Address line 2",
                        "type": "string",
                        "minLength": 10,
                        "maxLength": 200
                      }
                    }
                  },
                  {
                    "required": [
                      "country",
                      "city",
                      "district",
                      "address_1"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "title": "MongoDb Id of the address",
                                  "description": "MongoDb Id of the address",
                                  "type": "string",
                                  "length": 24,
                                  "example": "62f8d2787eb0550b2715c847"
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1addresses~1create/post/requestBody/content/application~1json/schema/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "title": "MongoDb Id of the user",
                                  "description": "MongoDb Id of the user",
                                  "type": "string",
                                  "length": 24,
                                  "example": "62f8d2787eb0550b2715c847"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "address_1": {
                                  "title": "Address line 1",
                                  "description": "Address line 1",
                                  "type": "string",
                                  "minLength": 10,
                                  "maxLength": 200
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "address_2": {
                                  "title": "Address line 2",
                                  "description": "Address line 2",
                                  "type": "string",
                                  "minLength": 10,
                                  "maxLength": 200,
                                  "required": false
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/addresses/update/{addressId}": {
      "summary": "",
      "description": "",
      "patch": {
        "tags": [
          "Addresses"
        ],
        "summary": "Update address",
        "description": "Update address",
        "operationId": "address.update",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1addresses~1get~1my~1%7BaddressId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/paths/~1addresses~1create/post/requestBody/content/application~1json/schema/allOf/0"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "address_1": {
                        "title": "Address line 1",
                        "description": "Address line 1",
                        "type": "string",
                        "minLength": 10,
                        "maxLength": 200
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "address_2": {
                        "title": "Address line 2",
                        "description": "Address line 2",
                        "type": "string",
                        "minLength": 10,
                        "maxLength": 200
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "title": "MongoDb Id of the address",
                                  "description": "MongoDb Id of the address",
                                  "type": "string",
                                  "length": 24,
                                  "example": "62f8d2787eb0550b2715c847"
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1addresses~1create/post/requestBody/content/application~1json/schema/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "title": "MongoDb Id of the user",
                                  "description": "MongoDb Id of the user",
                                  "type": "string",
                                  "length": 24,
                                  "example": "62f8d2787eb0550b2715c847"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "address_1": {
                                  "title": "Address line 1",
                                  "description": "Address line 1",
                                  "type": "string",
                                  "minLength": 10,
                                  "maxLength": 200
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "address_2": {
                                  "title": "Address line 2",
                                  "description": "Address line 2",
                                  "type": "string",
                                  "minLength": 10,
                                  "maxLength": 200,
                                  "required": false
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/addresses/delete/{addressId}": {
      "summary": "",
      "description": "",
      "delete": {
        "tags": [
          "Addresses"
        ],
        "summary": "Delete address",
        "description": "Delete address",
        "operationId": "address.delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1addresses~1get~1my~1%7BaddressId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "_id": {
                                  "title": "MongoDb Id of the address",
                                  "description": "MongoDb Id of the address",
                                  "type": "string",
                                  "length": 24,
                                  "example": "62f8d2787eb0550b2715c847"
                                }
                              }
                            },
                            {
                              "$ref": "#/paths/~1addresses~1create/post/requestBody/content/application~1json/schema/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "user": {
                                  "title": "MongoDb Id of the user",
                                  "description": "MongoDb Id of the user",
                                  "type": "string",
                                  "length": 24,
                                  "example": "62f8d2787eb0550b2715c847"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "address_1": {
                                  "title": "Address line 1",
                                  "description": "Address line 1",
                                  "type": "string",
                                  "minLength": 10,
                                  "maxLength": 200
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "address_2": {
                                  "title": "Address line 2",
                                  "description": "Address line 2",
                                  "type": "string",
                                  "minLength": 10,
                                  "maxLength": 200,
                                  "required": false
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/admin/addresses/get-all": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get all addresses",
        "description": "Get all addresses",
        "operationId": "address.admin-get-all",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1addresses~1get~1my~1%7BaddressId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/data"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          }
        }
      }
    },
    "/admin/addresses/get/{addressId}": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Get address by addressId",
        "description": "Get address by addressId",
        "operationId": "address.admin-get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1addresses~1get~1my~1%7BaddressId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1addresses~1get~1my~1%7BaddressId%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/data"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/admin/roles/get-all": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Roles (Only Admins)"
        ],
        "summary": "Get all roles",
        "description": "Get all roles",
        "operationId": "roles.admin-get-all",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1admin~1roles~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          }
        }
      }
    },
    "/admin/roles/get/{roleId}": {
      "summary": "",
      "description": "",
      "get": {
        "tags": [
          "Roles (Only Admins)"
        ],
        "summary": "Get role by roleId",
        "description": "Get role by roleId",
        "operationId": "roles.admin-get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Role id",
            "length": 24
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1admin~1roles~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    },
    "/admin/roles/create": {
      "summary": "",
      "description": "",
      "post": {
        "tags": [
          "Roles (Only Admins)"
        ],
        "summary": "Create roles",
        "description": "Create roles",
        "operationId": "roles.admin-create",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "title": "Role name",
                        "description": "Role name",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 50
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "description": {
                        "title": "Role description",
                        "description": "Role description",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 150
                      }
                    }
                  },
                  {
                    "required": [
                      "name",
                      "description"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "allOf": [
                            {
                              "$ref": "#/paths/~1posts~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data/allOf/0"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Role name",
                                  "description": "Role name",
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 50
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "title": "Role description",
                                  "description": "Role description",
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 150
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "409": {
            "$ref": "#/paths/~1users~1register/post/responses/409"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/admin/roles/update/{roleId}": {
      "summary": "",
      "description": "",
      "patch": {
        "tags": [
          "Roles (Only Admins)"
        ],
        "summary": "Update roles",
        "description": "Update roles",
        "operationId": "roles.admin-update",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1admin~1roles~1get~1%7BroleId%7D/get/parameters/0"
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "title": "Role name",
                        "description": "Role name",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 50
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "description": {
                        "title": "Role description",
                        "description": "Role description",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 150
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/paths/~1users~1logout/post/responses/200/content/application~1json/schema"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/paths/~1admin~1roles~1create/post/responses/201/content/application~1json/schema/allOf/1/properties/data"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          },
          "409": {
            "$ref": "#/paths/~1users~1register/post/responses/409"
          },
          "500": {
            "$ref": "#/paths/~1users~1login/post/responses/500"
          }
        }
      }
    },
    "/admin/roles/delete/{roleId}": {
      "summary": "",
      "description": "",
      "delete": {
        "tags": [
          "Roles (Only Admins)"
        ],
        "summary": "Delete role",
        "description": "Delete role",
        "operationId": "roles.admin-delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/paths/~1admin~1roles~1get~1%7BroleId%7D/get/parameters/0"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/paths/~1admin~1roles~1update~1%7BroleId%7D/patch/responses/200"
          },
          "400": {
            "$ref": "#/paths/~1users~1login/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1users~1logout/post/responses/401"
          },
          "403": {
            "$ref": "#/paths/~1users~1logout/post/responses/403"
          },
          "404": {
            "$ref": "#/paths/~1users~1login/post/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "login": {
        "description": "Password must contain at least 1 lowercase letter, 1 uppercase letter and 1 special character and must be at least 8 characters",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "$ref": "#/components/requestBodies/register/content/application~1json/schema/allOf/1/allOf/0"
                },
                {
                  "required": [
                    "email",
                    "password"
                  ]
                }
              ]
            }
          }
        }
      },
      "register": {
        "description": "Password must contain at least 1 lowercase letter, 1 uppercase letter and 1 special character and must be at least 8 characters",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "first_name": {
                          "title": "User first name",
                          "description": "User first name",
                          "type": "string",
                          "minLength": 3
                        },
                        "last_name": {
                          "title": "User last name",
                          "description": "User last name",
                          "type": "string",
                          "minLength": 3
                        }
                      }
                    },
                    {
                      "required": [
                        "first_name",
                        "last_name"
                      ]
                    }
                  ]
                },
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "email": {
                          "title": "User email",
                          "description": "User email",
                          "type": "string",
                          "format": "email"
                        },
                        "password": {
                          "title": "User password",
                          "description": "User password",
                          "type": "string",
                          "minLength": 8,
                          "example": "Bordo01!"
                        }
                      }
                    },
                    {
                      "required": [
                        "email",
                        "password"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "get-password-reset-email": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "email": {
                      "title": "User email address",
                      "description": "User email address",
                      "type": "string",
                      "format": "email"
                    }
                  }
                },
                {
                  "required": [
                    "email"
                  ]
                }
              ]
            }
          }
        }
      },
      "get-email-verification-email": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/requestBodies/get-password-reset-email/content/application~1json/schema/allOf/0"
                },
                {
                  "required": [
                    "email"
                  ]
                }
              ]
            }
          }
        }
      },
      "reset-password": {
        "description": "New password must contain at least 1 lowercase letter, 1 uppercase letter and 1 special character and must be at least 8 characters",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "title": "JWT Password reset token",
                  "description": "Password reset token from endpoint `user/get-password-reset-email`.",
                  "type": "string",
                  "example": "eyJhbG7Il9pZCI6IjYyZW..."
                },
                "new_password": {
                  "title": "New Password",
                  "description": "New Password",
                  "type": "string",
                  "example": "Bordo02!"
                }
              },
              "required": [
                "token",
                "new_password"
              ]
            }
          }
        }
      },
      "change-password": {
        "description": "New password must contain at least 1 lowercase letter, 1 uppercase letter and 1 special character and must be at least 8 characters",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "old_password": {
                  "title": "User old password",
                  "description": "User old password",
                  "type": "string",
                  "example": "Bordo01!"
                },
                "new_password": {
                  "title": "User new password",
                  "description": "User new password",
                  "type": "string",
                  "example": "Bordo02!"
                }
              },
              "required": [
                "old_password",
                "new_password"
              ]
            }
          }
        }
      },
      "create-tag": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "title": "Tag name",
                      "description": "Tag name",
                      "type": "string",
                      "minLength": 3
                    }
                  }
                },
                {
                  "required": [
                    "name"
                  ]
                }
              ]
            }
          }
        }
      },
      "update-tag": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "title": "Tag name",
                      "description": "Tag name",
                      "type": "string",
                      "minLength": 3
                    }
                  }
                },
                {
                  "required": [
                    "name"
                  ]
                }
              ]
            }
          }
        }
      },
      "create-post": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "title": {
                          "title": "Post title",
                          "description": "Post title",
                          "type": "string"
                        },
                        "description": {
                          "title": "Post description",
                          "description": "Post description",
                          "type": "string"
                        }
                      }
                    },
                    {
                      "required": [
                        "title",
                        "description"
                      ]
                    }
                  ]
                },
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "content": {
                          "title": "Post content",
                          "description": "Post content",
                          "type": "string"
                        }
                      }
                    },
                    {
                      "required": [
                        "content"
                      ]
                    }
                  ]
                },
                {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "tags": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "title": "Tag Id",
                                "description": "Tag Id",
                                "type": "string"
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
